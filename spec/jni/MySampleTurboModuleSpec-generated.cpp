
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "MySampleTurboModuleSpec.h"

namespace facebook {
namespace react {

static facebook::jsi::Value __hostFunction_MySampleTurboModuleSpecJSI_getString(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, StringKind, "getString", "(Ljava/lang/String;)Ljava/lang/String;", args, count);
}

static facebook::jsi::Value __hostFunction_MySampleTurboModuleSpecJSI_getArray(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ArrayKind, "getArray", "(Ljava/lang/String;)Lcom/facebook/react/bridge/WritableArray;", args, count);
}

static facebook::jsi::Value __hostFunction_MySampleTurboModuleSpecJSI_getObject(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getObject", "(Ljava/lang/String;)Lcom/facebook/react/bridge/WritableMap;", args, count);
}

static facebook::jsi::Value __hostFunction_MySampleTurboModuleSpecJSI_getPromise(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPromise", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
}

static facebook::jsi::Value __hostFunction_MySampleTurboModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
}

MySampleTurboModuleSpecJSI::MySampleTurboModuleSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getString"] = MethodMetadata {1, __hostFunction_MySampleTurboModuleSpecJSI_getString};
  methodMap_["getArray"] = MethodMetadata {1, __hostFunction_MySampleTurboModuleSpecJSI_getArray};
  methodMap_["getObject"] = MethodMetadata {1, __hostFunction_MySampleTurboModuleSpecJSI_getObject};
  methodMap_["getPromise"] = MethodMetadata {1, __hostFunction_MySampleTurboModuleSpecJSI_getPromise};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_MySampleTurboModuleSpecJSI_addListener};
}

std::shared_ptr<TurboModule> MySampleTurboModule_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "MySampleTurboModule") {
    return std::make_shared<MySampleTurboModuleSpecJSI>(params);
  }
  return nullptr;
}

} // namespace react
} // namespace facebook
